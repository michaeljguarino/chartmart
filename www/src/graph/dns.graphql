fragment DnsRecord on DnsRecord {
  id
  name
  type
  records
  cluster
  provider
  creator {
    ...User
  }
  insertedAt
}

fragment DnsDomain on DnsDomain {
  id
  name
  creator {
    ...User
  }
  accessPolicy {
    id
    bindings {
      ...PolicyBinding
    }
  }
  insertedAt
}

query DnsRecords($cluster: String!, $provider: Provider!) {
  dnsRecords(cluster: $cluster, provider: $provider, first: 500) {
    edges {
      node {
        ...DnsRecord
      }
    }
  }
}

mutation CreateDnsRecord(
  $cluster: String!
  $provider: Provider!
  $attributes: DnsRecordAttributes!
) {
  createDnsRecord(
    cluster: $cluster
    provider: $provider
    attributes: $attributes
  ) {
    ...DnsRecord
  }
}

mutation DeleteDnsRecord($name: String!, $type: DnsRecordType!) {
  deleteDnsRecord(name: $name, type: $type) {
    ...DnsRecord
  }
}

mutation UpdateDomain($id: ID!, $attributes: DnsDomainAttributes!) {
  updateDomain(id: $id, attributes: $attributes) {
    ...DnsDomain
  }
}

mutation DeleteDomain($id: ID!) {
  deleteDomain(id: $id) {
    ...DnsDomain
  }
}
