fragment RecipeFragment on Recipe {
  id
  name
  description
  restricted
  provider
  tests {
    type
    name
    message
    args { name repo key }
  }
  repository { id name }
  oidcSettings {
    uriFormat
    uriFormats
    authMethod
    domainKey
    subdomain
  }
  recipeSections { ...RecipeSectionFragment }
}

fragment RecipeItemFragment on RecipeItem {
  id
  chart { ...ChartFragment }
  terraform { ...TerraformFragment }
  configuration { ...RecipeConfigurationFragment }
}

fragment RecipeSectionFragment on RecipeSection {
  index
  repository {
    ...RepoFragment
    installation { ...InstallationFragment }
  }
  recipeItems { ...RecipeItemFragment }
  configuration { ...RecipeConfigurationFragment }
}

fragment RecipeConfigurationFragment on RecipeConfiguration {
  name
  type
  default
  documentation
  optional
  placeholder
  functionName
  condition { field operation value }
  validation { type regex message }
}

fragment StackFragment on Stack {
  id
  name
  displayName
  description
  featured
  creator { 
    id
    name
  }
  collections {
    id
    provider
    bundles {
      recipe {
        repository {
          ...RepoFragment
          tags {
            tag
          }
        }
      }
    }
  }
}

query GetRecipe($repo: String, $name: String) {
  recipe(repo: $repo, name: $name) {
    ...RecipeFragment
    recipeDependencies { ...RecipeFragment }
  }
}

query ListRecipes($repo: String, $provider: Provider) {
  recipes(repositoryName: $repo, provider: $provider, first: 500) {
    edges { node { ...RecipeFragment } }
  }
}

mutation CreateRecipe($name: String!, $attributes: RecipeAttributes!) {
  createRecipe(repositoryName: $name, attributes: $attributes) {
    id
  }
}

mutation InstallRecipe($id: ID!) {
  installRecipe(recipeId: $id, context: "{}") {
    id
  }
}

mutation CreateStack($attributes: StackAttributes!) {
  createStack(attributes: $attributes) {
    id
  }
}

query GetStack($name: String!, $provider: Provider!) {
  stack(name: $name, provider: $provider) {
    ...StackFragment
  }
}

query ListStacks($featured: Boolean, $cursor: String) {
  stacks(first: 100, after: $cursor, featured: $featured) {
    edges { node { ...StackFragment } }
  }
}
