/* eslint-disable */

import { clientsClaim } from 'workbox-core'
import { ExpirationPlugin } from 'workbox-expiration'
import { precacheAndRoute } from 'workbox-precaching'
import { registerRoute } from 'workbox-routing'
import { StaleWhileRevalidate } from 'workbox-strategies'

clientsClaim()

// Precache all the assets generated by your build process.
// Their URLs are injected into the manifest variable below.
// This variable must be present somewhere in your service worker file,
// even if you decide not to use precaching. See https://cra.link/PWA
precacheAndRoute(self.__WB_MANIFEST)

const isSameOrigin = (url) => url.origin === self.location.origin;
const shouldCache = (pathname) => Boolean(
  pathname.endsWith('.png') ||
  pathname.endsWith('.svg') ||
  pathname.endsWith('.jpg') ||
  pathname.endsWith('.woff2')
)

// An example runtime caching route for requests that aren't handled by the
// precache, in this case same-origin .png requests like those from in public/
// Add in any other file extensions or routing criteria as needed.
registerRoute(
  ({ url }) => isSameOrigin(url) && shouldCache(url.pathname),
  new StaleWhileRevalidate({
    cacheName: 'images',
    plugins: [
      // Ensure that once this runtime cache reaches a maximum size the
      // least-recently used cache items are removed.
      new ExpirationPlugin({ maxEntries: 500 }),
    ],
  })
);
